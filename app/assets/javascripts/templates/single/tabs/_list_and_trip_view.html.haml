.list-or-trip-mode{ ng_show: "!( m.browsing && !m.placeName.length>1 ) && m.plan() && (m.plan().items.length>0 || m.addingItem) && (m.mode == 'list' || m.mode == 'trip')" }
  #header-spacing.except-landscape
  .print-title {{ m.plan().name }}
  .print-by by {{ m.plan().user.name }}
  .pad-top-addbox{ ng_show: 'm.plan() || m.hasPlans()' }
  .band.spaced-extra
    .container.max
      .items-in-plan
        .items-in-plan-category{ ng_repeat: 'category in m.plan().categories( m.categorizeBy )', ng_class: 'category.toLowerCase()' }
          %ul.plan-list-items
            %li.items-organized-by.rainbow{ ng_show: "m.categorizeBy != 'alphabetical'", ng_class: "colorClass( category )" }
              %i.list-category-icon{ ng_show: "m.categorizeBy == 'type'", ng_class: 'typeIcon(m.plan().items, category)' } 
              %span{ ng_show: "m.categorizeBy == 'recent' && category.length"} Updated on {{ category }}
              %span{ ng_show: "m.categorizeBy == 'recent' && !category.length"} Undated
              %span{ ng_show: "m.categorizeBy != 'recent'"} {{ category }}

            %li.plan-list-item{ ng_repeat: 'item in m.plan().matchingItems( category, m.categorizeBy )', ng_class: 'item.liClass($index)' }
              / .owner-opinions{ ng_show: '!m.userOwnsPlan()' }
              /   .item-opinion.love-item{ ng_show: 'm.plan().ownerLoves(item)' }
              /     %i.fa.fa-heart
              /   .item-opinion.been-item{ ng_show: 'm.plan().ownerVisited(item)' }
              /     %i.fa.fa-check-square
              .bucket-list-tab.main-item-card{ ng_click: "item.fsOpen(m.mode != 'trip')" }
                .bucket-list-no-img{ ng_show: "!item.mark.place.image_url" }
                .bucket-list-img{ ng_show: "item.mark.place.image_url", style: "background-image: url('{{ item.mark.place.image_url }}')" }
                  %img{ ng_src: "{{ item.mark.place.image_url }}" }
                .bucket-list-wrap
                  .bucket-list-profile
                    %a{ target: '_self' }
                      .bucket-list-title
                        {{ item.mark.place.names[0] }}
                      .foursquare-and-info-wrap
                        %span.mini-foursquare-icon.rainbow{ ng_class: "colorClass( item.meta_category )" }
                          %img{ ng_show: "item.mark.place.foursquare_icon", ng_src: "{{ item.mark.place.foursquare_icon.replace('_bg','') }}" }
                        .bucket-list-more-info
                          {{ item.mark.place.categories.join(', ') }}
                        .bucket-list-more-info.locale-only{ ng_show: "item.mark.place.street_addresses[0]" }
                          {{ item.mark.place.street_addresses[0] }}
                        .bucket-list-more-info.locale-only
                          {{ item.mark.place.localeDetails() }}

              .list-item-notes{ ng_show: 'm.mode == "list"' }
                %textarea{ ng_model: "item.note", id: "item_{{item.id}}", placeholder: "Add a Note", ng_blur: 'item.saveNote()', ng_disabled: '!item.notesSearched || !m.userOwnsPlan()', ng_change: 'noteChange(item)' }

              %item_actions_bar{ m: 'm', item: 'item' }

              .list-item-select{ ng_show: "mode == 'trip'", ng_class: "{selected: isSelected(item)}", ng_click: 'toggleSelectedItem(item)' }