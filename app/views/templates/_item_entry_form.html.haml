%script{ type: 'text/ng-template', id: 'item_entry_form.html' }

  .new-item-form

    .planbox-wrapper
      .setplanbox-on-plan-page
        .input-and-results{ ng_show: '!list' }
          .faux-input-wrap
            %span.add-new{ ng_show: 'canAddList()', ng_click: 'setList()' }
              %i.fa.fa-plus-circle
            %input.real-select.guide-name#guide{ name: "guide", type: 'text', placeholder: 'Guide Name', ng_model: 'listQuery', ng_on_enter_key: "setListOnEnter()", ng_class: "{'full-width': !canAddList()}" }
          %ul.suggested-results{ ng_show: 'listOptions().length && listQuery.length > 2' }
            %li{ ng_repeat: "currentList in listOptions()", ng_click: 'setList(currentList)' }
              %span.name {{currentList.name}}
              %span.count ({{currentList.place_ids.length}} places)
        .chosen-plan{ ng_show: 'list && !rename' }
          %span.title{ ng_click: 'renameList()' } {{ list.name }}
          %i.fa.fa-times.title{ ng_click: 'resetList()' }
          %i.fa.fa-cog.settings.dropdown-toggle{ "data-toggle" => "dropdown" }
          = render 'header/dropdowns/plan_settings'
        .chosen-plan.above-mask{ ng_show: 'list && rename' }
          %input.title#rename{ ng_model: 'rename', ng_on_enter_key: 'saveRenameList()', ng_on_esc_key: 'cancelRenameList()' }
          / .planit-button{ ng_click: 'saveRenameList()' } Save
          / .planit-button{ ng_click: 'cancelRenamelist()' } Cancel
      .minimize-maximize-addbox{ ng_show: "list && !rename && mode != 'trip'", ng_click: "addBoxToggle()", ng_class: "{'opened': addBoxToggled}" }
        %i.fa{ ng_class: "{'fa-caret-up': addBoxToggled, 'fa-caret-down': !addBoxToggled}" }
      .addbox-on-plan-page{ ng_show: "list && addBoxToggled && mode != 'trip'" }
        .faux-input-wrap{ ng_show: '!nearby && list' }
          %span.add-new{ ng_show: 'canSetNearby(placeNearby)', ng_click: 'setNearby(placeNearby)' }
            %i.fa.fa-check
          %input.real-select#place-nearby{ name: "place-nearby", type: 'text', placeholder: 'Where? (City or Region)', ng_model: 'placeNearby', ng_show: 'list && !nearby', ng_on_enter_key: 'setNearby(placeNearby)', ng_class: "{'full-width': (!placeNearby || placeNearby.length < 2)}" }
        .input-and-results{ ng_show: 'nearby && list' }
          .faux-input-wrap
            %span.chosen-input#chosen-nearby{ ng_click: 'resetNearby()' }
              %i.fa.fa-times
              {{ nearby }}
            %input.real-input#place-name{ name: "place-name", type: 'text', placeholder: 'Add a Place (Search by Name)', ng_model: 'placeName', ng_change: 'search()', ng_on_enter_key: "lazyAddItem()", ng_keydown: 'removeTagOnBackspace($event)' }
          %ul.suggested-results{ ng_show: 'options.length > 0' }
            %li.search-results-list{ ng_repeat: 'option in options', ng_click: 'addItem(option)' }
              .bucket-list-tab
                %a{ ng_href: '{{option.href}}', target: '_self' }
                  .bucket-list-no-img{ ng_show: "!option.image_url" }
                  .bucket-list-img{ ng_show: "option.image_url", style: "background-image: url('{{ option.image_url }}');" }
                .bucket-list-wrap
                  .bucket-list-profile
                    %a{ target: '_self' }
                      .bucket-list-title
                        {{ option.names[0] }}
                      .foursquare-and-info-wrap
                        %span.mini-foursquare-icon{ ng_show: "option.icon", style: "background-image: url('{{ option.icon }}');" }
                        .bucket-list-more-info
                          {{ option.categories.join(', ') }}
                        .bucket-list-more-info.locale-only
                          {{ option.localeDetails() }}

    .sort-items-by.large-screen{ ng_show: "list && (mode == 'list' || mode == 'trip')" }
      %b Sort
      %span.selectable.sort-by-button{ ng_click: "setCategoryAs('alphabetical')", ng_class: "{'highlighted': categoryIs == 'alphabetical'}" } A-Z
      %span.selectable.sort-by-button{ ng_click: "setCategoryAs('type')", ng_class: "{'highlighted': categoryIs == 'type'}" } Type
      %span.selectable.sort-by-button{ ng_click: "setCategoryAs('locale')", ng_class: "{'highlighted': categoryIs == 'locale'}" } Locale
      %span.selectable.sort-by-button{ ng_click: "setCategoryAs('recent')", ng_class: "{'highlighted': categoryIs == 'recent'}" } Recent
    .view-and-edit-mode{ ng_show: "list", ng_class: "{'in-map': mode == 'map', 'large-screen': mode != 'map'}" }
      %span.selectable.view-and-edit-button{ ng_click: "setMode('list')", ng_class: "{'highlighted': mode == 'list'}" } List
      %span.selectable.view-and-edit-button.disabled Trip
      / { ng_click: "setMode('trip')", ng_class: "{'highlighted': mode == 'trip'}" }
      %span.selectable.view-and-edit-button{ ng_click: "setMode('map')", ng_class: "{'highlighted': mode == 'map'}" } Map
      %b View

    / Or effectively ng_class to half-screen for TripMode
    .band.spaced-xxx{ ng_show: "list && (mode == 'list' || mode == 'trip')", plan_drag: true, plan: 'list',  list_items: 'items' } 
      .container
        %h1.title.sixteen.columns{ ng_show: 'mode == "trip"' } Drag and Drop to Order Your Trip
        .items-in-manifest.six.columns{ ng_show: 'mode == "trip"', ng_class: '{empty: !manifestItems.length}' }
          %ul.plan-list-items
            .repeater{ ng_repeat: 'item in manifestItems' }
              .spacer{ ng_class: '{hovered: hoveringOver($index)}', ng_mouseenter: 'setHover($index)', ng_mouseleave: 'setHover(null)', ng_click: 'insert($index)' }
                %p Click here to add or relocate item
              %li.plan-list-item
                .bucket-list-tab
                  %h6 {{ item.mark.place.names[0] }} - {{ $index }}
                .list-item-select{ ng_class: "{selected: isSelected(item)}", ng_click: 'toggleSelectedItem(item)' }
            .spacer{ ng_class: '{hovered: hoveringOver(manifestItems.length)}', ng_mouseenter: 'setHover(manifestItems.length)', ng_mouseleave: 'setHover(null)', ng_click: 'insert()' }
              %p Click here to add or relocate item
        .items-in-plan{ ng_class: 'listClass(mode)' }
          .items-in-plan-category{ ng_repeat: 'category in categories' }
            %ul.plan-list-items
              %li.items-organized-by{ ng_show: "categoryIs != 'alphabetical'" }
                %i.fa{ ng_show: "categoryIs == 'type'", ng_class: 'typeIcon(category)' } 
                %span{ ng_show: "categoryIs != 'recent'"} {{ category }}
                %span{ ng_show: "categoryIs == 'recent'"} {{ toDate( category ) }}
              %li.plan-list-item{ ng_repeat: 'item in matchingItems( category )' }
                .bucket-list-tab
                  %a{ ng_href: '{{item.mark.place.href}}', target: '_self' }
                    .bucket-list-no-img{ ng_if: "!item.mark.place.image_url" }
                    .bucket-list-img{ ng_if: "item.mark.place.image_url", style: "background-image: url('{{ item.mark.place.image_url }}');" }
                  .bucket-list-wrap
                    .bucket-list-profile
                      %a{ target: '_self' }
                        .bucket-list-title
                          {{ item.mark.place.names[0] }}
                        .bucket-list-more-info
                          %i{ class: "{{ item.mark.place.meta_icon }}"}
                          {{ item.mark.place.categories.join(', ') }}
                        .bucket-list-more-info.locale-only
                          {{ item.mark.place.localeDetails() }}
                .list-item-notes.largest-screen{ ng_show: 'mode == "list"'}
                  %textarea{ id: "item_{{item.id}}", placeholder: "Add a Note", ng_on_enter_key: 'saveNote(item)', disabled: true }
                .list-item-select{ ng_show: "mode == 'trip'", ng_class: "{selected: isSelected(item)}", ng_click: 'toggleSelectedItem(item)' }

    .band.spaced-xxx.padded{ ng_show: '!list && lists' }
      .container.centered
        .column{ ng_repeat: 'plan in lists' }
          .any-tab-wrapper
            .guide-item-count.numbered-box {{ plan.place_ids.length }}
            .content-tab
              / .tab-operations
              /   .tab-operations-button
              /     .i.fa.fa-calendar
              /   .tab-operations-button
              /     .i.fa.fa-pencil
              /   .tab-operations-button
              /     .i.fa.fa-heart
              /   .tab-operations-button
              /     .i.fa.fa-check-circle
              /   .tab-operations-button
              /     .i.fa.fa-trash
              .content-tab-img{ ng_class: "{'add-photo': !plan.best_image }", ng_click: 'setList(plan)', ng_hover: 'imageChangeable = true' }
                %img{ src: '{{ planImage( plan ) }}', ng_show: 'plan.best_image && plan.best_image.url' }
                %i.add-photo-camera.fa.fa-camera-retro{ ng_show: 'imageChangeable || ( !plan.best_image || !plan.best_image.url)', ng_click: 'changeImage()' }
              .content-tab-title{ ng_click: 'setList(plan)' } {{plan.name}}

    .plan-map-container{ ng_show: "list && mode == 'map'" }
      %plan_map.plan-map-canvas{ plan_places: 'places', user_id: "list.user_id", web_padding: '45,45,15,400', mobile_padding: '40,15,80,15', zoom_control: 'true', show_map: "showMap" } 
      / , user_id: 'list.user_id' }
