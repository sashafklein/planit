%script{ type: 'text/ng-template', id: 'search_and_add.html' }
  .search-bar-wrap
    .input-group.faux-input
      %ul.faux-input.form-control.search-bar-field
        %li.real-input{ ng_show: "!queryOnly" }
          %input#primary.input-with-clear{ name: "input-search-query", placeholder: "Search or Add places", type: "text", ng_model: 'query', ng_change: 'search()', ng_keydown: "handleKeydown($event)", ng_keyup: 'handleKeyup($event)', ng_on_esc_key: 'clearSearch(); hideSearch()', ng_trim: "false" }
          %i.fa.fa-times-circle.clear-input-button{ ng_show: 'query && !nearby', ng_click: 'clearSearch()' }
        %li.faux-input{ ng_show: "queryOnly" }
          {{ queryOnly }}
        %li.symbol{ ng_show: "queryOnly" }
          %span{ ng_click: 'forceUnSplit()' }
            {{ splitTerm }}
        %li.real-input{ ng_show: "queryOnly" }
          %input#secondary.input-with-clear{ name: "input-search-nearby", placeholder: "Location", type: "text", ng_model: 'nearby', ng_change: 'search()', ng_keydown: "handleKeydown($event)", ng_keyup: 'handleKeyup($event)', ng_on_esc_key: 'clearSearch();hideSearch()', ng_trim: "false" }
          %i.fa.fa-times-circle.clear-input-button{ ng_click: 'clearSearch()' }
      %span.input-group-btn
        %button.btn.btn-default.search-input-button{ type: "button", ng_click: 'search()' }
          %i.fa.fa-search.fa-lg{ ng_if: '!query || places.length' }
          %i.fa.fa-plus.fa-lg{ ng_if: 'query && !places.length' }
    .place-search-results{ ng_show: 'query' }
      %ul

        %li.search-results-list{ ng_repeat: 'place in places', ng_mouseenter: 'selectPlace(place)', ng_mouseleave: 'deselectPlace()', ng_class: '{highlighted: currentPlaceId == place.viewId}', ng_show: 'showResults() && !currentEvent' }
          %a.search-bar-result-control{ ng_if: "hasMarkFor( place ) && pageType != 'plan'", remove_place_on_click: '{{place.id}}', success_function: "removedPlace( place.id )" }
            %i.fa.fa-trash
          %a.search-bar-result-control{ ng_if: "!hasMarkFor( place ) && pageType != 'plan'", save_place_on_click: '{{place.id}}', success_function: "savedPlace( place.id )" }
            %i.fa.fa-bookmark
          / %a.search-bar-result-control{ ng_if: "hasMarkFor( place ) && pageType == 'plan'", remove_place_from_plan_on_click: '{{place.id}}', success_function: "removedPlace( place.id )" }
          /   %i.fa.fa-trash
          / DEFINITELY EDIT THE BELOW TO ALLOW FOR AUTO-IMPORT OF PLAN
          %a.search-bar-result-control{ ng_if: "!hasMarkFor( place ) && pageType == 'plan'", add_places_to_plan_on_click: '[{{place.id}}]', success_function: "savedPlace( place.id )" }
            %i.fa.fa-book
          .bucket-list-tab
            %a{ ng_href: '{{place.href}}' }
              .bucket-list-no-img{ ng_if: "!place.image_url" }
              .bucket-list-img{ alt: '{{place.image_source}}', ng_if: "place.image_url", style: "background-image: url('{{ place.image_url }}');" }
            .bucket-list-wrap
              .bucket-list-profile
                %a{ ng_href: '{{place.href}}' }
                  .bucket-list-title
                    {{ place.name }}
                  .bucket-list-more-info
                    %i{ class: "{{ place.meta_icon }}"}
                    {{ place.categories.join(', ') }}
                  .bucket-list-more-info.locale-only
                    {{ place.locale || place.country }}

        %li.add-new-places.entry-form{ ng_show: 'userId && !currentEvent' }
          .bucket-list-tab
            .bucket-list-wrap{ ng_show: '!nearby' }
              = "* Specify '<b ng-class: '{neon: overrideSplit}'>{{ splitKey }}'</b> to narrow your search or add a new place".html_safe
            .bucket-list-wrap{ ng_show: 'nearby' }
              = "* Don't see it above? <b>We'll scour the net for you:</b>".html_safe
            .planit-button.neon{ ng_click: 'createPlace()', ng_show: "canCreatePlace()" } Fetch